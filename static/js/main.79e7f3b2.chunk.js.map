{"version":3,"sources":["components/Favourites/Favourites.module.css","components/Favourites/FavCard/FavCard.module.css","components/Nav/Nav.module.css","components/Pagination/Pagination.module.css","components/Characters/Characters.module.css","assets/img/svg/preloader.svg","components/common/Preloader/Preloader.jsx","components/Pagination/Pagination.jsx","assets/img/svg/like-ico.svg","assets/img/svg/like-ico-clicked.svg","components/Characters/Card/Card.jsx","components/Characters/Characters.jsx","api/api.js","redux/characters-reducer.js","components/Characters/CardInfo.jsx","components/Characters/CharactersContainer.jsx","assets/img/svg/cross-ico.svg","components/Favourites/FavCard/FavCard.jsx","components/Favourites/Favourites.jsx","components/Favourites/FavouritesContainer.jsx","components/Nav/Nav.jsx","App.js","redux/redux-store.js","index.js","components/Characters/Card/Card.module.css"],"names":["module","exports","Preloader","style","gridColumn","margin","src","preloaderIco","alt","Pagination","currentPage","getCharacters","totalCharactersCount","useState","current","setCurrent","totalUsersCount","total","Math","ceil","onPageChanged","e","page","target","innerHTML","filteredCenter","filter","p","addTwoRight","addTwoLeft","length","addOneRight","addOneLeft","push","unshift","useEffect","className","s","pagination","arrowLeft","onClick","map","active","arrowRight","Card","props","localStorage","getItem","id","isFav","setIsFav","card","character","to","image","name","info","dislikeIco","likeIco","toggleLikeThunk","setAttribute","Characters","characters","header","headerText","getCharactersThunk","isLoading","cards","undefined","url","replace","instance","axios","baseURL","cardsApi","get","then","response","data","cardId","SET_CHARACTERS","SET_CURRENT_PAGE","SET_FAV_CHARACTERS","TOGGLE_IS_LOADING","DELETE_FAV_CHARACTER","SET_TOTAL_CHARACTERS_COUNT","SET_FAV_CURRENT_PAGE","TOGGLE_IS_NO_CHAR","initialState","favCharacters","favCurrentPage","isNoChar","getFavCharacters","favCharactersId","Object","keys","key","sort","a","b","setCharactersAC","type","setCurrentPageAC","setFavCharactersAC","toggleIsLoadingAC","deleteFavCharacterAC","setTotalCharactersCountAC","count","setFavCurrentPageAC","toggleIsNoCharAC","condition","charactersReducer","state","action","u","CardInfo","selectedCharacter","this","c","infoHeader","cardInfo","infoImage","desc","birth_year","height","mass","gender","hair_color","skin_color","eye_color","React","Component","CharactersContainer","path","match","params","render","withUrlDataContainer","withRouter","connect","charactersPage","dispatch","results","removeItem","setItem","FavCard","crossIco","deleteFavCharacterThunk","Favourites","setIsNoChar","favourites","getFavCharactersThunk","nocharAlert","FavouritesContainer","responses","i","Nav","nav","list","item","link","App","from","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,WAAa,+BAA+B,MAAQ,0BAA0B,YAAc,kC,mBCAlJD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,2B,mBCA1JD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,KAAO,oB,mBCAzED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,WAAa,+BAA+B,UAAY,8BAA8B,kBAAoB,wC,kBCA5MD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,WAAa,+BAA+B,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,UAAY,8BAA8B,KAAO,yBAAyB,KAAO,yBAAyB,KAAO,2B,qLCD1T,MAA0B,sC,OCU1BC,EARG,WACd,OACI,qBAAKC,MAAO,CAACC,WAAY,IAAKC,OAAQ,cAAtC,SACI,qBAAKC,IAAKC,EAAcC,IAAI,Q,yBC4CzBC,EA9CI,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,qBAC9C,EAA4BC,mBAASH,GAArC,mBAAKI,EAAL,KAAcC,EAAd,KACIC,EAAkBJ,EAElBK,EAAQC,KAAKC,KAAKH,EADJ,IAGZI,EAAgB,SAACC,GACnB,IAAIC,GAAQD,EAAEE,OAAOC,UACrBT,EAAWO,GACXX,EAAcW,IAIdG,EADW,CAACX,EAAU,EAAGA,EAAU,EAAGA,EAASA,EAAU,EAAGA,EAAU,GAC9CY,QAAO,SAACC,GAAD,OAAOA,EAAI,GAAKA,EAAIV,EAAQ,KAC3DW,EAAcH,EAAe,KAAOX,GAAWG,EAAQ,EACvDY,EAAaJ,EAAeA,EAAeK,OAAS,KAAOhB,GAAWG,EAAQ,EAC9Ec,EAAeN,EAAe,KAAOX,GAAWG,EAAQ,EACxDe,EAAcP,EAAeA,EAAeK,OAAS,KAAOhB,GAAWG,EAAQ,GAAOQ,EAAeA,EAAeK,OAAS,KAAOhB,GAAqB,IAAVG,EAC/IW,GAAaH,EAAeQ,KAAKnB,EAAU,EAAGA,EAAU,GACxDiB,GAAaN,EAAeQ,KAAKnB,EAAU,GAC3Ce,GAAYJ,EAAeS,QAAQpB,EAAU,EAAGA,EAAU,GAC1DkB,GAAYP,EAAeS,QAAQpB,EAAU,GAgBjD,OAJAqB,qBAAU,WACNpB,EAAWL,KACb,CAACA,IAGC,qBAAI0B,UAAWC,IAAEC,WAAjB,UACiB,IAAZxB,GAAiB,oBAAIsB,UAAWC,IAAEE,UAAWC,QAhBlC,WAChBzB,EAAWD,EAAU,GACrBH,EAAcG,EAAU,IAcF,SAAmD,MACpEW,EAAegB,KAAI,SAACd,GAAD,OAAOA,IAAMb,EAAU,oBAAI0B,QAASpB,EAAegB,UAAWC,IAAEK,OAAzC,SAA0Df,GAAJA,GAAc,oBAAIa,QAASpB,EAAb,SAAqCO,GAAJA,MAC/Ib,IAAYG,GAAS,oBAAImB,UAAWC,IAAEM,WAAYH,QAbtC,WACjBzB,EAAWD,EAAU,GACrBH,EAAcG,EAAU,IAWE,SAAqD,U,gBC5CxE,MAA0B,qCCA1B,MAA0B,6C,OCqC1B8B,EA/BF,SAACC,GACV,MAAwBhC,mBAA4C,MAAnCiC,aAAaC,QAAQF,EAAMG,KAA5D,mBAAKC,EAAL,KAAYC,EAAZ,KAcA,OACI,qBAAKd,UAAWC,IAAEc,KAAlB,SACI,sBAAKf,UAAWC,IAAEe,UAAlB,UACI,cAAC,IAAD,CAASC,GAAE,qBAAgBR,EAAMG,IAAjC,SACI,qBAAKZ,UAAWC,IAAEiB,MAAOhD,IAAG,iEAA4DuC,EAAMG,GAAlE,QACxBxC,IAAG,UAAKqC,EAAMU,UAEtB,sBAAKnB,UAAWC,IAAEmB,KAAlB,UACI,cAAC,IAAD,CAASH,GAAE,qBAAgBR,EAAMG,IAAMZ,UAAWC,IAAEkB,KAApD,SAA2DV,EAAMU,OACjE,qBAAKjD,IAAK2C,EAAQQ,EAAaC,EAAStB,UAAWC,IAAEqB,QAASlD,IAAI,GAAGgC,QArBhE,SAACnB,GACd4B,GACAJ,EAAMc,iBAAgB,EAAMd,EAAMG,IAClCE,GAAS,GACT7B,EAAEE,OAAOqC,aAAa,MAAtB,UAAgCF,MAEhCb,EAAMc,iBAAgB,EAAOd,EAAMG,IACnCE,GAAS,GACT7B,EAAEE,OAAOqC,aAAa,MAAtB,UAAgCH,iB,gBCG7BI,EAfI,SAAChB,GAChB,OACI,sBAAKT,UAAWC,IAAEyB,WAAlB,UACI,sBAAK1B,UAAWC,IAAE0B,OAAlB,UACI,qBAAK3B,UAAWC,IAAE2B,WAAlB,wBACA,cAAC,EAAD,CAAYtD,YAAamC,EAAMnC,YAAaC,cAAekC,EAAMoB,mBAAoBrD,qBAAsBiC,EAAMjC,0BAEpHiC,EAAMqB,UAAY,sBAAK9B,UAAWC,IAAE8B,MAAlB,cAA0B,cAAC,EAAD,IAA1B,OAA+C,qBAAK/B,UAAWC,IAAE8B,MAAlB,cACxCC,IAArBvB,EAAMiB,YAA4BjB,EAAMiB,WAAWrB,KAAI,SAAAU,GAAI,OAAI,cAAC,EAAD,CAAMI,KAAMJ,EAAKI,KAAMP,GAAIG,EAAKkB,IAAIC,QAAQ,MAAO,IAChFX,gBAAiBd,EAAMc,iBAArDR,EAAKkB,IAAIC,QAAQ,MAAO,c,wCCZvCC,E,MAAWC,OAAa,CAC1BC,QAAS,2BAGAC,EAAW,SACXhE,GACL,OAAO6D,EAASI,IAAT,uBAA6BjE,IAC/BkE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnBJ,EAAW,SAOTK,GACP,OAAOR,EAASI,IAAT,iBAAuBI,IACzBH,MAAK,SAAAC,GACF,OAAOA,EAASC,SCd1BE,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAuB,uBACvBC,EAA6B,6BAC7BC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAAe,CACjB1B,WAAY,GACZpD,YAAa,EACb+E,cAAe,GACfvB,WAAW,EACXtD,qBAAsB,EACtB8E,eAAgB,EAChBC,UAAU,GA2BRC,EAAmB,WAGrB,IAFA,IAAIC,EAAkB,GAEtB,MADWC,OAAOC,KAAKjD,cACvB,eAAsB,CAAjB,IAAIkD,EAAG,KACRH,EAAgB5D,MAAM+D,GAO1B,OAAyBH,EAAgBI,MALzC,SAAiBC,EAAGC,GAChB,OAAID,EAAIC,EAAU,EACdD,IAAMC,EAAU,EAChBD,EAAIC,GAAW,OAAnB,MA6DFC,EAAkB,SAACtC,GAAD,MAAiB,CAAEuC,KAAMrB,EAAgBlB,eAC3DwC,EAAmB,SAAC5F,GAAD,MAAkB,CAAE2F,KAAMpB,EAAkBvE,gBAC/D6F,EAAqB,SAACd,GAAD,MAAoB,CAAEY,KAAMnB,EAAoBO,kBACrEe,EAAoB,SAACtC,GAAD,MAAgB,CAAEmC,KAAMlB,EAAmBjB,cAC/DuC,EAAuB,SAAC1B,GAAD,MAAa,CAAEsB,KAAMjB,EAAsBL,WAClE2B,EAA4B,SAACC,GAAD,MAAY,CAAEN,KAAMhB,EAA4BsB,UAC5EC,EAAsB,SAAClB,GAAD,MAAqB,CAAEW,KAAMf,EAAsBI,mBACzEmB,GAAmB,SAACC,GAAD,MAAgB,CAACT,KAAMd,EAAmBuB,cAEpDC,GAvGS,WAAmC,IAAlCC,EAAiC,uDAAzBxB,EAAcyB,EAAW,uCACtD,OAAQA,EAAOZ,MAEX,KAAKrB,EACD,OAAO,2BAAKgC,GAAZ,IAAmBlD,WAAYmD,EAAOnD,aAC1C,KAAKmB,EACD,OAAO,2BAAK+B,GAAZ,IAAmBtG,YAAauG,EAAOvG,cAC3C,KAAKwE,EACD,OAAO,2BAAK8B,GAAZ,IAAmBvB,cAAewB,EAAOxB,gBAC7C,KAAKH,EACD,OAAO,2BAAK0B,GAAZ,IAAmBtB,eAAgBuB,EAAOvB,iBAC9C,KAAKP,EACD,OAAO,2BAAK6B,GAAZ,IAAmB9C,UAAW+C,EAAO/C,YACzC,KAAKkB,EACD,OAAO,2BAAK4B,GAAZ,IAAmBvB,cAAc,YAAKuB,EAAMvB,cAAc/D,QAAO,SAAAwF,GAAC,OAAIA,EAAE7C,IAAIC,QAAQ,MAAO,MAAQ2C,EAAOlC,aAC9G,KAAKM,EACD,OAAO,2BAAK2B,GAAZ,IAAmBpG,qBAAsBqG,EAAON,QACpD,KAAKpB,EACD,OAAO,2BAAIyB,GAAX,IAAkBrB,SAAUsB,EAAOH,YACvC,QACI,OAAOE,ICjCbG,G,4JAEF,WAAU,IAAD,OACDC,EAAoBC,KAAKxE,MAAMiB,WAAWpC,QAAO,SAAA4F,GAAC,OAAIA,EAAEjD,IAAIC,QAAQ,MAAO,MAAQ,EAAKzB,MAAMkC,UAAQ,GAC1G,OACI,sBAAK3C,UAAWC,IAAEyB,WAAlB,UACI,sBAAK1B,UAAWC,IAAEkF,WAAlB,UACKF,KAAKxE,MAAM6C,eAAiB,qBAAKtD,UAAWC,IAAE2B,WAAlB,yBAAkD,qBAAK5B,UAAWC,IAAE2B,WAAlB,8BACxDI,IAAtBgD,GAAmC,sBAAKhF,UAAWC,IAAE2B,WAAlB,sBAAoCoD,EAAkB7D,MAAtD,UAEvC8D,KAAKxE,MAAMqB,UAAY,sBAAK9B,UAAWC,IAAE8B,MAAlB,cAA0B,cAAC,EAAD,IAA1B,OACpB,sBAAK/B,UAAWC,IAAEmF,SAAlB,UAEI,qBAAKpF,UAAWC,IAAEoF,UAAWnH,IAAG,iEAA4D+G,KAAKxE,MAAMkC,OAAvE,QAC5BvE,IAAG,UAAK6G,KAAKxE,MAAMU,QAEvB,sBAAKnB,UAAWC,IAAEmB,KAAlB,UACI,mBAAGpB,UAAWC,IAAEkB,KAAhB,cAA6Ca,IAAtBgD,GAAmCA,EAAkB7D,OAC5E,sBAAKnB,UAAWC,IAAEqF,KAAlB,UACI,uDAAyCtD,IAAtBgD,GAAmCA,EAAkBO,cACxE,mDAAqCvD,IAAtBgD,GAAmCA,EAAkBQ,UACpE,iDAAmCxD,IAAtBgD,GAAmCA,EAAkBS,QAClE,mDAAqCzD,IAAtBgD,GAAmCA,EAAkBU,UACpE,uDAAyC1D,IAAtBgD,GAAmCA,EAAkBW,cACxE,uDAAyC3D,IAAtBgD,GAAmCA,EAAkBY,cACxE,sDAAwC5D,IAAtBgD,GAAmCA,EAAkBa,6B,GAzBhFC,IAAMC,WAqCdhB,MCtCTiB,G,uKAEF,WACIf,KAAKxE,MAAMoB,mBAAmBoD,KAAKxE,MAAMnC,e,oBAG7C,WAAU,IAAD,OACL,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2H,KAAI,sBAAiBhB,KAAKxE,MAAMyF,MAAMC,OAAOxD,QAAUyD,OAAQ,kBAAM,cAAC,GAAD,CAAU1E,WAAY,EAAKjB,MAAMiB,WACzGI,UAAW,EAAKrB,MAAMqB,UAAWa,OAAQ,EAAKlC,MAAMyF,MAAMC,OAAOxD,YACrE,cAAC,IAAD,CAAOsD,KAAK,cAAcG,OAAQ,kBAAM,cAAC,EAAD,CAAY1E,WAAY,EAAKjB,MAAMiB,WAAYpD,YAAa,EAAKmC,MAAMnC,YAC3GuD,mBAAoB,EAAKpB,MAAMoB,mBAAoBN,gBAAiB,EAAKd,MAAMc,gBAC/E/C,qBAAsB,EAAKiC,MAAMjC,qBAAsBsD,UAAW,EAAKrB,MAAMqB,sB,GAb/DgE,IAAMC,WAmBpCM,GAAuBC,YAAWN,IAWvBO,gBATO,SAAC3B,GACnB,MAAO,CACHlD,WAAYkD,EAAM4B,eAAe9E,WACjCpD,YAAasG,EAAM4B,eAAelI,YAClCwD,UAAW8C,EAAM4B,eAAe1E,UAChCtD,qBAAsBoG,EAAM4B,eAAehI,wBAIX,CAAEqD,mBFsBR,SAACvD,GAAD,8CAAiB,WAAOmI,GAAP,eAAA3C,EAAA,6DAC/C2C,EAASrC,GAAkB,IAC3BqC,EAASvC,EAAiB5F,IAFqB,SAG1BgE,EAAkBhE,GAHQ,OAG3CmE,EAH2C,OAI/CgE,EAASnC,EAA0B7B,EAAS8B,QAC5CkC,EAASzC,EAAgBvB,EAASiE,UAClCD,EAASrC,GAAkB,IANoB,2CAAjB,uDEtB4B7C,gBFsE/B,SAACmD,EAAW/B,GAAZ,OAAuB,SAAC8D,GAC/C/B,EACAhE,aAAaiG,WAAWhE,GAExBjC,aAAakG,QAAQjE,EAAQ,QE1EtB4D,CAAkEF,I,wCCrClE,OAA0B,sCC4B1BQ,GAxBC,SAACpG,GAKb,OACI,qBAAKT,UAAWC,KAAEc,KAAlB,SAEI,sBAAKf,UAAWC,KAAEe,UAAlB,UACI,cAAC,IAAD,CAASC,GAAE,qBAAgBR,EAAMG,IAAjC,SACI,qBAAKZ,UAAWC,KAAEiB,MAAOhD,IAAG,iEAA4DuC,EAAMG,GAAlE,QACxBxC,IAAG,UAAKqC,EAAMU,UAEtB,sBAAKnB,UAAWC,KAAEmB,KAAlB,UACI,cAAC,IAAD,CAASpB,UAAWC,KAAEkB,KAAMF,GAAE,qBAAgBR,EAAMG,IAApD,SACKH,EAAMU,OAEX,qBAAKjD,IAAK4I,GAAU9G,UAAWC,KAAEqB,QAASlD,IAAI,GAAGgC,QAhBjD,WAEZK,EAAMsG,wBAAwBtG,EAAMG,GAAIH,EAAMnC,yBCqBvC0I,GAtBI,SAACvG,GAChB,MAA8BhC,mBAASgC,EAAM8C,UAA7C,mBAAKA,EAAL,KAAe0D,EAAf,KAMA,OAJAlH,qBAAU,WACNkH,EAAYxG,EAAM8C,YACpB,CAAC9C,EAAM8C,WAGL,sBAAKvD,UAAWC,KAAEiH,WAAlB,UACI,sBAAKlH,UAAWC,KAAE0B,OAAlB,UACI,qBAAK3B,UAAWC,KAAE2B,WAAlB,yBACE2B,GAAY,cAAC,EAAD,CAAYhF,cAAekC,EAAM0G,sBAAuB7I,YAAamC,EAAMnC,YAAaE,qBAAsBiC,EAAMjC,0BAErIiC,EAAMqB,YAAcrB,EAAM8C,SAAW,sBAAKvD,UAAWC,KAAE8B,MAAlB,cAA0B,cAAC,EAAD,IAA1B,OAAgD,qBAAK/B,UAAWC,KAAE8B,MAAlB,cACzDC,IAAxBvB,EAAM4C,eAA+B5C,EAAM4C,cAAchD,KAAI,SAAAU,GAAI,OAAI,cAAC,GAAD,CAASoG,sBAAuB1G,EAAM0G,sBAC5GhG,KAAMJ,EAAKI,KAAMP,GAAIG,EAAKkB,IAAIC,QAAQ,MAAO,IAAwC6E,wBAAyBtG,EAAMsG,wBAAyBzI,YAAamC,EAAMnC,aAAzGyC,EAAKkB,IAAIC,QAAQ,MAAO,UAElFqB,GAAY,qBAAKvD,UAAWC,KAAEmH,YAAlB,4HChBnBC,G,uKACF,WACIpC,KAAKxE,MAAM0G,sBAAsBlC,KAAKxE,MAAM6C,kB,oBAEhD,WAAU,IAAD,OACL,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2C,KAAI,sBAAiBhB,KAAKxE,MAAMyF,MAAMC,OAAOxD,QAAUyD,OAAQ,kBAAM,cAAC,GAAD,CAAU1E,WAAY,EAAKjB,MAAM4C,cACzGvB,UAAW,EAAKrB,MAAMqB,UAAWa,OAAQ,EAAKlC,MAAMyF,MAAMC,OAAOxD,OAAQW,eAAgB,EAAK7C,MAAM6C,oBACxG,cAAC,IAAD,CAAO2C,KAAK,cAAcG,OAAQ,kBAAM,cAAC,GAAD,CAAYe,sBAAuB,EAAK1G,MAAM0G,sBAClF9D,cAAe,EAAK5C,MAAM4C,cAAevB,UAAW,EAAKrB,MAAMqB,UAC/DiF,wBAAyB,EAAKtG,MAAMsG,wBAAyBzI,YAAa,EAAKmC,MAAM6C,eACrF9E,qBAAsB,EAAKiC,MAAMjC,qBAAsB+E,SAAU,EAAK9C,MAAM8C,qB,GAZ9DuC,IAAMC,WAmBpCM,GAAuBC,YAAWe,IAYvBd,gBAVO,SAAC3B,GACnB,MAAO,CACHvB,cAAeuB,EAAM4B,eAAenD,cACpCvB,UAAW8C,EAAM4B,eAAe1E,UAChCwB,eAAgBsB,EAAM4B,eAAelD,eACrC9E,qBAAsBoG,EAAM4B,eAAehI,qBAC3C+E,SAAUqB,EAAM4B,eAAejD,YAIC,CAAE4D,sBN8BL,SAAC7I,GAAD,8CAAiB,WAAOmI,GAAP,qBAAA3C,EAAA,sDAClD2C,EAASrC,GAAkB,IAC3BqC,EAASjC,EAAoBlG,IACzBmF,EAAkBD,IACtBiD,EAASnC,EAA0Bb,EAAgB/D,SACxB,IAA3B+D,EAAgB/D,OAAe+G,EAAShC,IAAiB,IAASgC,EAAShC,IAAiB,IACxF6C,EAAY,GACPC,EAAkB,GAAdjJ,EAAmB,GAPkB,YAOdiJ,GAAmB,GAAdjJ,EAAmB,GAPV,yBAQnB0D,IAAvByB,EAAgB8D,GAR0B,kCASrBjF,EAAoBmB,EAAgB8D,IATf,QAStC9E,EATsC,OAU1C6E,EAAUzH,KAAK4C,GAV2B,QAOa8E,IAPb,uBAalDd,EAAStC,EAAmBmD,IAC5Bb,EAASrC,GAAkB,IAduB,4CAAjB,uDM9B4B2C,wBN+C1B,SAACpE,EAAQrE,GAAT,8CAAyB,WAAOmI,GAAP,qBAAA3C,EAAA,sDAC5DpD,aAAaiG,WAAWhE,GACxB8D,EAASpC,EAAqB1B,IAC1Bc,EAAkBD,IACtBiD,EAASnC,EAA0Bb,EAAgB/D,SACxB,IAA3B+D,EAAgB/D,OAAe+G,EAAShC,IAAiB,IAASgC,EAAShC,IAAiB,IACxFnG,EAAcQ,KAAKC,KAAK0E,EAAgB/D,OAAS,KAC7B,IAAhBpB,IACAA,GAA4B,GAGhCgJ,EAAY,GACPC,EAAkB,GAAdjJ,EAAmB,GAZ4B,YAYxBiJ,GAAmB,GAAdjJ,EAAmB,GAZA,yBAa7B0D,IAAvByB,EAAgB8D,GAboC,kCAc/BjF,EAAoBmB,EAAgB8D,IAdL,QAchD9E,EAdgD,OAepD6E,EAAUzH,KAAK4C,GAfqC,QAYG8E,IAZH,uBAkB5Dd,EAASjC,EAAoBlG,IAC7BmI,EAAStC,EAAmBmD,IAnBgC,4CAAzB,wDM/CxBf,CAA6EF,I,oBCpB7EmB,GAfH,WACR,OACI,qBAAKxH,UAAWC,KAAEwH,IAAlB,SACI,qBAAIzH,UAAWC,KAAEyH,KAAjB,UACI,oBAAI1H,UAAWC,KAAE0H,KAAjB,SACI,cAAC,IAAD,CAAS1G,GAAG,cAAcjB,UAAWC,KAAE2H,KAAvC,0BAEJ,oBAAI5H,UAAWC,KAAE0H,KAAjB,SACI,cAAC,IAAD,CAAS1G,GAAG,cAAcjB,UAAWC,KAAE2H,KAAvC,gCCSLC,OAdf,WACE,OACE,sBAAK7H,UAAU,MAAf,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiG,KAAK,uBAAuBG,OAAQ,kBAAM,cAAC,GAAD,OACjD,cAAC,IAAD,CAAOH,KAAK,uBAAuBG,OAAQ,kBAAM,cAAC,GAAD,OACjD,cAAC,IAAD,CAAU0B,KAAK,IAAI7G,GAAG,uB,kBCT1B8G,GAAWC,aAAgB,CAC3BxB,eAAgB7B,KAKLsD,GAFHC,aAAYH,GAAUI,aAAgBC,OCClDC,IAASjC,OACP,cAAC,IAAD,CAAU6B,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJK,SAASC,eAAe,U,kBCd1B3K,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,yB","file":"static/js/main.79e7f3b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Favourites_header__2qA3Y\",\"headerText\":\"Favourites_headerText__34Ngg\",\"cards\":\"Favourites_cards__2iWEw\",\"nocharAlert\":\"Favourites_nocharAlert__2x4IP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character\":\"FavCard_character__2XI_j\",\"info\":\"FavCard_info__20I8h\",\"name\":\"FavCard_name__wshRt\",\"card\":\"FavCard_card__3za8Z\",\"likeIco\":\"FavCard_likeIco__1OgXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__15231\",\"list\":\"Nav_list__3Q26c\",\"link\":\"Nav_link__3JINS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2YxUL\",\"active\":\"Pagination_active__3mFTg\",\"arrowRight\":\"Pagination_arrowRight__2nTCk\",\"arrowLeft\":\"Pagination_arrowLeft__Bf_mW\",\"pagination__arrow\":\"Pagination_pagination__arrow__2x450\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Characters_header__t7vDj\",\"infoHeader\":\"Characters_infoHeader__O2PSp\",\"headerText\":\"Characters_headerText__xiORd\",\"cards\":\"Characters_cards__3Umwj\",\"cardInfo\":\"Characters_cardInfo__1F7cq\",\"infoImage\":\"Characters_infoImage__Fnrix\",\"info\":\"Characters_info__2OLPg\",\"name\":\"Characters_name__3lW6Q\",\"desc\":\"Characters_desc__3J3fy\"};","export default __webpack_public_path__ + \"static/media/preloader.52c7c6d4.svg\";","import preloaderIco from '../../../assets/img/svg/preloader.svg'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div style={{gridColumn: '3', margin: '200px auto'}}>\r\n            <img src={preloaderIco} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import { useEffect, useState } from 'react'\r\nimport s from './Pagination.module.css'\r\n\r\nconst Pagination = ({ currentPage, getCharacters, totalCharactersCount }) => {\r\n    let [current, setCurrent] = useState(currentPage)\r\n    let totalUsersCount = totalCharactersCount \r\n    let cardsOnPage = 10\r\n    let total = Math.ceil(totalUsersCount / cardsOnPage)\r\n    \r\n    const onPageChanged = (e) => {\r\n        let page = +e.target.innerHTML\r\n        setCurrent(page)\r\n        getCharacters(page)\r\n    }\r\n\r\n    const center = [current - 2, current - 1, current, current + 1, current + 2],\r\n        filteredCenter = center.filter((p) => p > 0 && p < total + 1),\r\n        addTwoRight = filteredCenter[0] === current && total > 4,\r\n        addTwoLeft = filteredCenter[filteredCenter.length - 1] === current && total > 4,\r\n        addOneRight = (filteredCenter[1] === current && total > 4),\r\n        addOneLeft = (filteredCenter[filteredCenter.length - 2] === current && total > 4) || (filteredCenter[filteredCenter.length - 1] === current && total === 4);\r\n    if (addTwoRight) filteredCenter.push(current + 3, current + 4)\r\n    if (addOneRight) filteredCenter.push(current + 3)\r\n    if (addTwoLeft) filteredCenter.unshift(current - 4, current - 3)\r\n    if (addOneLeft) filteredCenter.unshift(current - 3)\r\n    \r\n    const onLeftArrow = () => {\r\n        setCurrent(current - 1)\r\n        getCharacters(current - 1)\r\n    }\r\n\r\n    const onRightArrow = () => {\r\n        setCurrent(current + 1)\r\n        getCharacters(current + 1)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        setCurrent(currentPage)\r\n    },[currentPage])\r\n\r\n    return (\r\n        <ul className={s.pagination}>\r\n            {current !== 1 && <li className={s.arrowLeft} onClick={onLeftArrow}>{'<'}</li>}\r\n            {filteredCenter.map((p) => p === current ? <li onClick={onPageChanged} className={s.active} key={p}>{p}</li> : <li onClick={onPageChanged} key={p}>{p}</li>)}\r\n            {current !== total && <li className={s.arrowRight} onClick={onRightArrow}>{'>'}</li>}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Pagination","export default __webpack_public_path__ + \"static/media/like-ico.665ede1a.svg\";","export default __webpack_public_path__ + \"static/media/like-ico-clicked.4c4725c1.svg\";","import s from './Card.module.css'\r\nimport likeIco from '../../../assets/img/svg/like-ico.svg'\r\nimport dislikeIco from '../../../assets/img/svg/like-ico-clicked.svg'\r\nimport { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Card = (props) => {\r\n    let [isFav, setIsFav] = useState(localStorage.getItem(props.id) === '+')\r\n\r\n    const onToggleLike = (e) => {\r\n        if (isFav) {\r\n            props.toggleLikeThunk(true, props.id)\r\n            setIsFav(false)\r\n            e.target.setAttribute('src', `${likeIco}`)\r\n        } else {\r\n            props.toggleLikeThunk(false, props.id)\r\n            setIsFav(true)\r\n            e.target.setAttribute('src', `${dislikeIco}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.card}>\r\n            <div className={s.character}>\r\n                <NavLink to={`characters/${props.id}`}>\r\n                    <img className={s.image} src={`https://starwars-visualguide.com/assets/img/characters/${props.id}.jpg`}\r\n                        alt={`${props.name}`}></img>\r\n                </NavLink>\r\n                <div className={s.info}>\r\n                    <NavLink to={`characters/${props.id}`} className={s.name}>{props.name}</NavLink>\r\n                    <img src={isFav ? dislikeIco : likeIco} className={s.likeIco} alt=\"\" onClick={onToggleLike}></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import Preloader from '../common/Preloader/Preloader'\r\nimport Pagination from '../Pagination/Pagination'\r\nimport Card from './Card/Card'\r\nimport s from './Characters.module.css'\r\n\r\nconst Characters = (props) => {\r\n    return (\r\n        <div className={s.characters} >\r\n            <div className={s.header}>\r\n                <div className={s.headerText}>Characters</div>\r\n                <Pagination currentPage={props.currentPage} getCharacters={props.getCharactersThunk} totalCharactersCount={props.totalCharactersCount}/>\r\n            </div>\r\n            {props.isLoading ? <div className={s.cards}> <Preloader/> </div>: <div className={s.cards}>\r\n                {props.characters !== undefined && props.characters.map(card => <Card name={card.name} id={card.url.replace(/\\D/g, \"\")} \r\n                key={card.url.replace(/\\D/g, \"\")}  toggleLikeThunk={props.toggleLikeThunk}/>)}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characters\r\n\r\n","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\nexport const cardsApi = {\r\n    getCards(currentPage) {\r\n        return instance.get(`people/?page=${currentPage}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getFavCard(cardId) {\r\n        return instance.get(`people/${cardId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import { cardsApi } from \"../api/api\"\r\n\r\nconst SET_CHARACTERS = 'SET_CHARACTERS'\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_FAV_CHARACTERS = \"GET_FAV_CHARACTERS\"\r\nconst TOGGLE_IS_LOADING = \"TOGGLE_IS_LOADING\"\r\nconst DELETE_FAV_CHARACTER = \"DELETE_FAV_CHARACTER\"\r\nconst SET_TOTAL_CHARACTERS_COUNT = \"SET_TOTAL_CHARACTERS_COUNT\"\r\nconst SET_FAV_CURRENT_PAGE = \"SET_FAV_CURRENT_PAGE\"\r\nconst TOGGLE_IS_NO_CHAR = \"TOGGLE_IS_NO_CHAR\"\r\n\r\nconst initialState = {\r\n    characters: [],\r\n    currentPage: 1,\r\n    favCharacters: [],\r\n    isLoading: false,\r\n    totalCharactersCount: 0,\r\n    favCurrentPage: 1,\r\n    isNoChar: false\r\n}\r\n\r\nlet charactersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_CHARACTERS:\r\n            return { ...state, characters: action.characters }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_FAV_CHARACTERS:\r\n            return { ...state, favCharacters: action.favCharacters }\r\n        case SET_FAV_CURRENT_PAGE:\r\n            return { ...state, favCurrentPage: action.favCurrentPage }\r\n        case TOGGLE_IS_LOADING:\r\n            return { ...state, isLoading: action.isLoading }\r\n        case DELETE_FAV_CHARACTER:\r\n            return { ...state, favCharacters: [...state.favCharacters.filter(u => u.url.replace(/\\D/g, \"\") !== action.cardId)] }\r\n        case SET_TOTAL_CHARACTERS_COUNT:\r\n            return { ...state, totalCharactersCount: action.count }\r\n        case TOGGLE_IS_NO_CHAR: \r\n            return {...state, isNoChar: action.condition}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst getFavCharacters = () => {\r\n    let favCharactersId = []\r\n    let keys = Object.keys(localStorage)\r\n    for (let key of keys) {\r\n        favCharactersId.push(+key)\r\n    }\r\n    function compare(a, b) {\r\n        if (a > b) return 1;\r\n        if (a === b) return 0;\r\n        if (a < b) return -1;\r\n    }\r\n    return favCharactersId = favCharactersId.sort(compare)\r\n}\r\n\r\nexport const getCharactersThunk = (currentPage) => async (dispatch) => {\r\n    dispatch(toggleIsLoadingAC(true))\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let response = await cardsApi.getCards(currentPage)\r\n    dispatch(setTotalCharactersCountAC(response.count))\r\n    dispatch(setCharactersAC(response.results))\r\n    dispatch(toggleIsLoadingAC(false))\r\n}\r\n\r\nexport const getFavCharactersThunk = (currentPage) => async (dispatch) => {\r\n    dispatch(toggleIsLoadingAC(true))\r\n    dispatch(setFavCurrentPageAC(currentPage))\r\n    let favCharactersId = getFavCharacters()\r\n    dispatch(setTotalCharactersCountAC(favCharactersId.length))\r\n    favCharactersId.length === 0 ? dispatch(toggleIsNoCharAC(true)) : dispatch(toggleIsNoCharAC(false))\r\n    let responses = []\r\n    for (let i = currentPage * 10 - 10; i <= currentPage * 10 - 1; i++) {\r\n        if (favCharactersId[i] !== undefined) {\r\n            let response = await cardsApi.getFavCard(favCharactersId[i])\r\n            responses.push(response)\r\n        }\r\n    }\r\n    dispatch(setFavCharactersAC(responses))\r\n    dispatch(toggleIsLoadingAC(false))\r\n}\r\n\r\nexport const deleteFavCharacterThunk = (cardId, currentPage) => async (dispatch) => {\r\n    localStorage.removeItem(cardId)\r\n    dispatch(deleteFavCharacterAC(cardId))\r\n    let favCharactersId = getFavCharacters()\r\n    dispatch(setTotalCharactersCountAC(favCharactersId.length))\r\n    favCharactersId.length === 0 ? dispatch(toggleIsNoCharAC(true)) : dispatch(toggleIsNoCharAC(false))\r\n    if (currentPage > Math.ceil(favCharactersId.length / 10)) {\r\n        if (currentPage !== 1 ) {\r\n            currentPage = currentPage - 1\r\n        }\r\n    }\r\n    let responses = []\r\n    for (let i = currentPage * 10 - 10; i <= currentPage * 10 - 1; i++) {\r\n        if (favCharactersId[i] !== undefined) {\r\n            let response = await cardsApi.getFavCard(favCharactersId[i])\r\n            responses.push(response)\r\n        }\r\n    }\r\n    dispatch(setFavCurrentPageAC(currentPage))\r\n    dispatch(setFavCharactersAC(responses))\r\n}\r\n\r\nexport const toggleLikeThunk = (condition, cardId) => (dispatch) => {\r\n    if (condition) {\r\n        localStorage.removeItem(cardId)\r\n    } else {\r\n        localStorage.setItem(cardId, '+')\r\n    }\r\n}\r\n\r\nconst setCharactersAC = (characters) => ({ type: SET_CHARACTERS, characters })\r\nconst setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nconst setFavCharactersAC = (favCharacters) => ({ type: SET_FAV_CHARACTERS, favCharacters })\r\nconst toggleIsLoadingAC = (isLoading) => ({ type: TOGGLE_IS_LOADING, isLoading })\r\nconst deleteFavCharacterAC = (cardId) => ({ type: DELETE_FAV_CHARACTER, cardId })\r\nconst setTotalCharactersCountAC = (count) => ({ type: SET_TOTAL_CHARACTERS_COUNT, count })\r\nconst setFavCurrentPageAC = (favCurrentPage) => ({ type: SET_FAV_CURRENT_PAGE, favCurrentPage })\r\nconst toggleIsNoCharAC = (condition) => ({type: TOGGLE_IS_NO_CHAR, condition})\r\n\r\nexport default charactersReducer","import s from './Characters.module.css'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\n\r\nclass CardInfo extends React.Component {\r\n\r\n    render() {\r\n        let selectedCharacter = this.props.characters.filter(c => c.url.replace(/\\D/g, \"\") === this.props.cardId)[0]\r\n        return (\r\n            <div className={s.characters} >\r\n                <div className={s.infoHeader}>\r\n                    {this.props.favCurrentPage ? <div className={s.headerText}>Favourites </div> : <div className={s.headerText}>Characters </div>}\r\n                    {selectedCharacter !== undefined && <div className={s.headerText}>{`/ ${selectedCharacter.name}`} </div>}\r\n                </div>\r\n                {this.props.isLoading ? <div className={s.cards}> <Preloader /> </div> :\r\n                    <div className={s.cardInfo}>\r\n\r\n                        <img className={s.infoImage} src={`https://starwars-visualguide.com/assets/img/characters/${this.props.cardId}.jpg`}\r\n                            alt={`${this.props.name}`}></img>\r\n\r\n                        <div className={s.info}>\r\n                            <p className={s.name}>{selectedCharacter !== undefined && selectedCharacter.name}</p>\r\n                            <div className={s.desc}>\r\n                                <p>{`Birth Year: ${selectedCharacter !== undefined && selectedCharacter.birth_year}`}</p>\r\n                                <p>{`Height: ${selectedCharacter !== undefined && selectedCharacter.height}`}</p>\r\n                                <p>{`Mass: ${selectedCharacter !== undefined && selectedCharacter.mass}`}</p>\r\n                                <p>{`Gender: ${selectedCharacter !== undefined && selectedCharacter.gender}`}</p>\r\n                                <p>{`Hair Color: ${selectedCharacter !== undefined && selectedCharacter.hair_color}`}</p>\r\n                                <p>{`Skin Color: ${selectedCharacter !== undefined && selectedCharacter.skin_color}`}</p>\r\n                                <p>{`Eye Color: ${selectedCharacter !== undefined && selectedCharacter.eye_color}`}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardInfo","import { connect } from \"react-redux\"\r\nimport Characters from \"./Characters\"\r\nimport { getCharactersThunk, toggleLikeThunk } from '../../redux/characters-reducer'\r\nimport React from \"react\"\r\nimport { Route, Switch, withRouter } from \"react-router-dom\"\r\nimport CardInfo from \"./CardInfo\"\r\n\r\nclass CharactersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getCharactersThunk(this.props.currentPage)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path={`/characters/${this.props.match.params.cardId}`} render={() => <CardInfo characters={this.props.characters}\r\n                    isLoading={this.props.isLoading} cardId={this.props.match.params.cardId} />} />\r\n                <Route path='/characters' render={() => <Characters characters={this.props.characters} currentPage={this.props.currentPage}\r\n                    getCharactersThunk={this.props.getCharactersThunk} toggleLikeThunk={this.props.toggleLikeThunk}\r\n                    totalCharactersCount={this.props.totalCharactersCount} isLoading={this.props.isLoading} />} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nlet withUrlDataContainer = withRouter(CharactersContainer)\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        characters: state.charactersPage.characters,\r\n        currentPage: state.charactersPage.currentPage,\r\n        isLoading: state.charactersPage.isLoading,\r\n        totalCharactersCount: state.charactersPage.totalCharactersCount\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getCharactersThunk, toggleLikeThunk })(withUrlDataContainer)\r\n\r\n","export default __webpack_public_path__ + \"static/media/cross-ico.957b1848.svg\";","import s from './FavCard.module.css'\r\nimport crossIco from '../../../assets/img/svg/cross-ico.svg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst FavCard = (props) => {\r\n    const onCross = () => {\r\n\r\n        props.deleteFavCharacterThunk(props.id, props.currentPage)\r\n    }\r\n    return (\r\n        <div className={s.card}>\r\n\r\n            <div className={s.character}>\r\n                <NavLink to={`favourites/${props.id}`}>\r\n                    <img className={s.image} src={`https://starwars-visualguide.com/assets/img/characters/${props.id}.jpg`}\r\n                        alt={`${props.name}`}></img>\r\n                </NavLink>\r\n                <div className={s.info}>\r\n                    <NavLink className={s.name} to={`favourites/${props.id}`}>\r\n                        {props.name}\r\n                    </NavLink >\r\n                    <img src={crossIco} className={s.likeIco} alt=\"\" onClick={onCross}></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavCard","import Pagination from \"../Pagination/Pagination\"\r\nimport s from './Favourites.module.css'\r\nimport FavCard from './FavCard/FavCard'\r\nimport { useEffect, useState } from \"react\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\n\r\nconst Favourites = (props) => {\r\n    let [isNoChar, setIsNoChar] = useState(props.isNoChar)\r\n\r\n    useEffect(()=> {\r\n        setIsNoChar(props.isNoChar)\r\n    },[props.isNoChar])\r\n    \r\n    return (\r\n        <div className={s.favourites} >\r\n            <div className={s.header}>\r\n                <div className={s.headerText}>Favourites</div>\r\n                {!isNoChar && <Pagination getCharacters={props.getFavCharactersThunk} currentPage={props.currentPage} totalCharactersCount={props.totalCharactersCount}/>}\r\n            </div>\r\n            {props.isLoading && !props.isNoChar ? <div className={s.cards}> <Preloader/> </div> : <div className={s.cards}>\r\n                {props.favCharacters !== undefined && props.favCharacters.map(card => <FavCard getFavCharactersThunk={props.getFavCharactersThunk} \r\n                name={card.name} id={card.url.replace(/\\D/g, \"\")} key={card.url.replace(/\\D/g, \"\")}  deleteFavCharacterThunk={props.deleteFavCharacterThunk} currentPage={props.currentPage}/>)}\r\n            </div>}\r\n            {isNoChar && <div className={s.nocharAlert} >You don't have favourite characters. You can add character to your favourite list on the characters page. </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favourites","import { connect } from \"react-redux\"\r\nimport Favourites from \"./Favourites\"\r\nimport React from \"react\"\r\nimport { getFavCharactersThunk, deleteFavCharacterThunk } from '../../redux/characters-reducer'\r\nimport { Route, Switch, withRouter } from \"react-router-dom\"\r\nimport CardInfo from \"../Characters/CardInfo\"\r\n\r\nclass FavouritesContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getFavCharactersThunk(this.props.favCurrentPage)\r\n    }\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path={`/favourites/${this.props.match.params.cardId}`} render={() => <CardInfo characters={this.props.favCharacters}\r\n                    isLoading={this.props.isLoading} cardId={this.props.match.params.cardId} favCurrentPage={this.props.favCurrentPage}/>} />\r\n                <Route path='/favourites' render={() => <Favourites getFavCharactersThunk={this.props.getFavCharactersThunk}\r\n                    favCharacters={this.props.favCharacters} isLoading={this.props.isLoading}\r\n                    deleteFavCharacterThunk={this.props.deleteFavCharacterThunk} currentPage={this.props.favCurrentPage}\r\n                    totalCharactersCount={this.props.totalCharactersCount} isNoChar={this.props.isNoChar} />} />\r\n            </Switch>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet withUrlDataContainer = withRouter(FavouritesContainer)\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        favCharacters: state.charactersPage.favCharacters,\r\n        isLoading: state.charactersPage.isLoading,\r\n        favCurrentPage: state.charactersPage.favCurrentPage,\r\n        totalCharactersCount: state.charactersPage.totalCharactersCount,\r\n        isNoChar: state.charactersPage.isNoChar\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getFavCharactersThunk, deleteFavCharacterThunk })(withUrlDataContainer)\r\n\r\n","import { NavLink } from 'react-router-dom'\r\nimport s from './Nav.module.css'\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul className={s.list}>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/characters\" className={s.link}>Characters</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/favourites\" className={s.link}>Favourites</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import { Route, Switch, Redirect } from 'react-router';\nimport './App.css';\nimport CharactersContainer from './components/Characters/CharactersContainer';\nimport FavouritesContainer from './components/Favourites/FavouritesContainer';\nimport Nav from './components/Nav/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n        <Route path=\"/characters/:cardId?\" render={() => <CharactersContainer />} />\n        <Route path=\"/favourites/:cardId?\" render={() => <FavouritesContainer />} />\n        <Redirect from=\"/\" to=\"/characters\" />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport charactersReducer from './characters-reducer'\r\n\r\nlet reducers = combineReducers({\r\n    charactersPage: charactersReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"character\":\"Card_character__zPeuD\",\"info\":\"Card_info__1Y1oY\",\"name\":\"Card_name__2VLlZ\",\"card\":\"Card_card__3RrOG\",\"likeIco\":\"Card_likeIco__2MAbd\"};"],"sourceRoot":""}